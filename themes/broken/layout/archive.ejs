<!--分类归档标签的展示页面 根据需求不同功能分开开发-->
<%
// 构建归档数据结构，用于存储按照年份、月份分类的文章数据
const archiveData = {};
site.posts.forEach(post => {
    const year = post.date.format('YYYY');
    const month = post.date.format('MM');
    if (!archiveData[year]) {
        archiveData[year] = {};
    }
    if (!archiveData[year][month]) {
        archiveData[year][month] = [];
    }
    archiveData[year][month].push(post);
});

// 将所有归档文章整合到一个数组用于分页计算
const allArchivePosts = [];
for (let year in archiveData) {
    for (let month in archiveData[year]) {
        allArchivePosts.push(...archiveData[year][month]);
    }
}

// 按照时间从新到旧排序
allArchivePosts.sort((a, b) => {
    const aDate = new Date(a.date);
    const bDate = new Date(b.date);
    return bDate - aDate;
});
%>

<!--判断页面类型 输出页面标题-->
<div class="container">
    <div class="meta">
        <% if (page.category) { %>
            <h1 class="title<%= theme.capitalize_tags && is_tag()? ' text-capitalize' : '' %>" style="margin-top: 6rem;">分类 <%= page.category %> 下的文章</h1>
        <% } %>
        <% if (page.tag) { %>
            <h1 class="title<%= theme.capitalize_tags && is_tag()? ' text-capitalize' : '' %>" style="margin-top: 6rem;">标签 <%= (theme.hashtag_prefix_before_tags? '#' : '') + page.tag %> 下的文章（努力开发中）
        <% } %>
        <br>
    </div>
    <div class="divider"></div>

    <!--分类页面部分-->

    <% if (page.category) { %>
        <%
        const categoryPosts = page.posts?.filter(post => post.categories.some(cat => cat.name === page.category)) || [];
        const perPage = Math.min((page.pagination && page.pagination.per_page) || 10, categoryPosts.length);
        const currentPage = page.current? parseInt(page.current, 10) : 1;
        const maxPage = Math.ceil(categoryPosts.length / perPage);
        const adjustedCurrentPage = Math.min(currentPage, maxPage);
        const startIndex = (adjustedCurrentPage - 1) * perPage;
        const endIndex = Math.min(startIndex + perPage, categoryPosts.length);
        const currentCategoryPosts = categoryPosts.slice(startIndex, endIndex);
        %>
        <div class="post-list archives">
            <% currentCategoryPosts.forEach(post => { %>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title"><%- post.title %></h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary" style="text-align: left;">发布时间：<%- post.date.format('YYYY-MM-DD HH:mm:ss') %></h6>
                    <p class="card-text"></p>
                    <a href="/<%- post.path %>" class="btn btn-primary" style="text-align: left;">阅读</a>
                </div>
            </div>
            <% }) %>
        </div>
        <%- partial('_partial/paginator') %>

        <!--归档页面部分-->

    <% } else if (page.layout === 'archive') { %>
        <div class="accordion" id="accordionExample">
            <%
            // 处理归档页面分页逻辑，确保文章归档标题只输出一次
            let hasShownArchiveTitle = false;
            const perPage = page.pagination && page.pagination.per_page || 10;
            const currentPage = page.current? parseInt(page.current, 10) : 1;
            const startIndex = (currentPage - 1) * perPage;
            const endIndex = Math.min(startIndex + perPage, allArchivePosts.length);
            const currentArchivePosts = allArchivePosts.slice(startIndex, endIndex);

            const months = {};
            currentArchivePosts.forEach(post => {
                const year = post.date.format('YYYY');
                const month = post.date.format('MM');
                const monthYear = `${year}-${month}`;
                if (!months[monthYear]) {
                    months[monthYear] = [];
                }
                months[monthYear].push(post);
            });

            // 先获取所有月份组合并排序
            const sortedMonthYears = Object.keys(months).sort((a, b) => {
                const aDate = new Date(a.split('-')[0], a.split('-')[1]);
                const bDate = new Date(b.split('-')[0], b.split('-')[1]);
                return bDate - aDate;
            });

            sortedMonthYears.forEach(monthYear => {
                const [year, month] = monthYear.split('-');
                if (!hasShownArchiveTitle) {
                %>
                <h1 style="margin-top: 6rem;">文章归档</h1>
                <br>
                <%
                hasShownArchiveTitle = true;
                }
            %>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading<%= monthYear %>">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse<%= monthYear %>" aria-expanded="false" aria-controls="collapse<%= monthYear %>">
                        <%= year %>年 <%= month %>月
                    </button>
                </h2>
                <div id="collapse<%= monthYear %>" class="accordion-collapse collapse" aria-labelledby="heading<%= monthYear %>" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <ul>
                            <% months[monthYear].forEach(post => { %>
                            <li>
                                <a href="/<%= post.path %>"><%= post.title %></a>
                            </li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            </div>
            <%- partial('_partial/paginator') %>
            <% }); %>
            <% } else if (page.layout === 'tag') { %>
                <h1>页面还在努力开发中</h1>
                <%- partial('_partial/paginator') %>
                            <% }; %>



        